"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","295c050f58c64152f5e073d5df9a92c1"],["/static/css/main.0741412f.css","fde1cb645f2fe06079cb20a96d8cdc41"],["/static/js/main.c6b2ec70.js","55d44ebc539f24873ab6a915043cf7c3"],["/static/media/Key-Icon.82fa263c.svg","82fa263c87eb970dadeea13b49988cfa"],["/static/media/Pencil-Icon.162ce158.svg","162ce1585f3597bda6c056afac3eb1cd"],["/static/media/Username-Icon.c88fd196.svg","c88fd196f1a5ba8ee9d2f3a6f6a95688"],["/static/media/add-icon.f9442426.svg","f9442426471a8c13690c7703b1ddf058"],["/static/media/back-arrow-icon.7bbe9f0f.svg","7bbe9f0f423d06568b386ceb49e8f4b6"],["/static/media/boards.b46734b7.svg","b46734b72c6a2403b8df3e6a07f849bc"],["/static/media/cameraIcon.47482c98.svg","47482c9871d670e93e51433468dd7f6c"],["/static/media/copy-icon.981e3414.svg","981e34142ca1e8b9e4490f1bd144a9c9"],["/static/media/due-date-icon.1d704b8d.svg","1d704b8d0e45940d3b649bc14cafdad7"],["/static/media/label-icon.2b82c237.svg","2b82c237ff276ea347e0d399a1eb0fb7"],["/static/media/member-icon.a04503e6.svg","a04503e6adf11dd2dfbdc5ea405ce13a"],["/static/media/move-icon.c4378147.svg","c4378147f1cb9854aeed648b0a72ee03"],["/static/media/searchIcon.346c64dc.svg","346c64dcd1d6370317c1b08bbfcc9da3"],["/static/media/tracker-close-x-icon.8686cbbc.svg","8686cbbc183a70eac66beb5d02ac2cff"],["/static/media/trashcan-closed-icon.d4dcb1ce.svg","d4dcb1ceb698ad8e77a97e9c63770567"],["/static/media/trashcan-open-icon.040012f2.svg","040012f2733f96f4ef69777e60843f4b"],["/static/media/workplace1.119938d0.jpg","119938d0549238f6ba75d0d51bed5d26"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});